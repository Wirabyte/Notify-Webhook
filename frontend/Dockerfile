# Multi-stage build for Angular frontend
FROM node:22-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install && npm cache clean --force

# Copy source code
COPY . .

# Build the application for production
RUN npm run build

# Production stage with nginx
FROM nginx:alpine AS production

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built application from builder stage
COPY --from=builder /app/dist/frontend /usr/share/nginx/html

# Create non-root user for security
RUN addgroup -g 1001 -S nginx && adduser -S angular -u 1001 -G nginx

# Set proper permissions
RUN chown -R angular:nginx /usr/share/nginx/html && \
    chown -R angular:nginx /var/cache/nginx && \
    chown -R angular:nginx /var/log/nginx && \
    chown -R angular:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R angular:nginx /var/run/nginx.pid

# Switch to non-root user
USER angular

# Expose the port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]